
NAME
    ceph-sync - Sync tool between local file system and remote object storage.
    cephsync - Alias of command ceph-sync.
    ossync - Alias of command ceph-sync. "ossync" means object storage sync.

SYNOPSIS
    ceph-sync --source <pathname> [--source-container <container-name>]
    --target <pathname> [--target-container <container-name>]
    [--container <container-name>]
    [--concurrency <number>] [--retry <times>] [--start-over | --fill] [--force] 
    [--mapper <js-pathname>]
    [--filter <js-pathname>]
    [--dual-meta-filter <js-pathname>]
    [--prefix <prefix>]
    [--if-none-match]

ARGUMENTS 
    --source <pathname>
    --target <pathname>
    Here, "pathname" SHOULD be a directory, or a JSON file which stores the 
    connection configs to the remote CEPH storage, in which "container" is 
    necessary. And at least one of --source and --target SHOULD represent a 
    remote CEPH storage.

    --source-container | --source-bucket <container-name>
    Source container / bucket name.

    --target-container | --target-bucket <container-name>
    Target container / bucket name.

    --container | --bucket <container-name>
    If specified, the container name is applied to both source and target (if 
    they are ceph connections).

    --prefix <pathname>
    Only objects whose names contain specified prefix will be sychronized. 
    This option ONLY available when the source is CEPH.

    --concurrency <number>
    Number of objects to be written in one batch.

    --retry <times>
    Times to retry when error occurs in some step.

    --start-over
    Start over, ignoring the mark which indicates the position last 
    synchronization moved on.

    --fill
    To re-sync those which are ignored in previous sync progresses.

    --force
    Run even if the target directory already exists and not empty. Only 
    available when sync from remote storage to local file system.

    --mapper <js-pathname>
    A Node.js module which transforms source object / file name to target 
    object / file name.

    --filter <js-pathname>
    An Node.js module which filter source objects / files by name.
    Only available when the source is file system now.

    --dual-meta-filter <js-pathname>
    A Node.js module which filter objects depending on the meta info of source
    and target object (if exists).
    Only available when the source is file system now.

    --if-none-match
    Check etag firstly. 
    If target object / file already exists and has same etag with source object / file,
    keep it instead of doing replacement.
    This option is only effective when sychronizing between two buckets.